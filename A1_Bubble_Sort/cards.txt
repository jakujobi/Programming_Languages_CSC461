+0000000000   //    000    _________       0          Zero Constant
+0000000001   //    001    _________       1          One Constant
+0000000000   //    002    _________       i          Outer Loop Index
+0000000000   //    003    _________       j          Inner Loop Index
+0000000000   //    004    _________       t          Temp for SWAPping
+0000000000   //    005    _________       N          Number of Elements
+0000000000   //    006    _________       N-1        Calculated as N-1
+0000000050   //    007    _________       50         Fifty Constant
+0000000150   //    008    _________       150        150 Constant
+0000000000   //    009    _________       TEMP       General Temp
+0000000000   //    010    _________       j+1        (j+1)th Item in Array
+0000000000   //    011    _________       A_j        jth Item in Array
+0000000000   //    012    _________       A_j+1      (j+1)th Item in Array
+0000000000   //    013    _________       151        151 (Calculated as 150+1)
+0000000000   //    014    _________       A[Base]    Base of A

+9999999999


// Bubble Sort Program
//  1. Read N
+8000000005   //    1000   Read N          Read       Read N into address 005
-5005001033   //    1001   _________       < jump     if N < 1, then jump to TERMINATE
-1005001006   //    1002   ______N-1       Sub        Sub N(005) - 1(001), store into N-1(006)

//  2. Fill A with Values
+0000000002   //    1003   ______i=0       Move       Move 0(000) to i (002), i = 0
+8000000009   //    1004   FILL_A          Read       Read value into TEMP(009)
-6009014002   //    1005   _________       Store      Move TEMP(009) into ABase(014) at i (002)
+7002005004   //    1006   _________       <+jump     i++ if i(002) < N(005) jump to FILL_A(1004)

//  3. Out Loop
+0000000002   //    1007   Set_i_0         Move       Move 0(000) into i(002), i = 0
+0000000003   //    1008   OUT_LOOP        Move       Move 0(000) into j(003), j = 0
+1001003010   //    1009   IN_LOOP         Add        Add j(003) + 1(001) into (j+1)(010), Make j+1
+6014003011   //    1010   _________       Load       Load jth(003) item from A(014) into A_j
+6014010012   //    1011   _________       Load       Load (j+1)th(010) item from A(014) into A_j+1
+5011012015   //    1012   _________       ≥ jump     If A_j(011) ≥ A_j+1(012), jump to SWAP(1015)
+7003006009   //    1013   INCRE_J         +<jump     j++, If j(003) < N-1(006), jump to IN_LOOP(1009)
+1002001002   //    1014   _________       Add        Add i(002) + 1(001) into i(002), i++

+0011000004   //    1015   SWAP            Move       Put A_j(011) into t (004), t = A_j
+0012000011   //    1016   _________       Move       Put A_j+1(012) into A_j(011), A_j+1
+0004000012   //    1017   _________       Move       Put t(004) into A_j+1(012), A_j+1 = t
+4000000013   //    1018   _________       <> jump    Jump back to INCRE_J(1013) if 0(000) == 0(000), Always jump
+7002006008   //    1019   _________       +<jump     i++, if i(002) < N-1(006), jump to OUT_LOOP(1008)

//  4. Print Sorted
+0000000002   //    1020   P_SORTED        Move       Move 0(000) into i(002), i = 0
+6014002009   //    1021   PRINT_LIST      Load       Load i(002) item from A(014) into TEMP(009), Temp = A[i]
-8009000000   //    1022   _________       Print      Print TEMP(009)
+7002005021   //    1023   _________       +<jump     i++, if i(002) < N(005), jump to PRINT_LIST(1021)

//  5. Filter 50-150
+0000000002   //    1024   FIL_50_150      Move     
+0008001013   //    1025   _________       Add        Add 150(008) + 1(001) into 151(013), Make 151
+6014002009   //    1026   CHECK_50        Load       Load A[i] into TEMP(009), Temp = A[i]
+5009007029   //    1027   __TEMP≥50       ≥ jump     If TEMP(009) ≥ 50(007), jump to CHECK_150(1029)
+7002005026   //    1028   _________       +<jump     i++, if i(002) < N(005), jump to CHECK_50(1026)

-5002013031   //    1029   CHECK_150       < jump     If TEMP(009) < 151, jump to PRINT_RANGE(1031)
+7002005026   //    1030   _________       +<jump     i++, if i(002) < N(005), jump to CHECK_50(1026)

-8009000000   //    1031   PRINT_RANGE     Print      Print TEMP(009)
+7002005026   //    1032   _________       +<jump     i++, if i(002) < N(005), jump to CHECK_50(1026)

+9000000000   //    1033   TERMINATE       End        TERMINATE Program
+9999999999

//  6. Data
+0000000010   //    0      _________       N = 10     
+0000000094   //    1      _________       First      
+0000000150   //    2      _________       Second     
+0000000113   //    3      _________       Third      
+0000000037   //    4      _________       Fourth     
+0000000063   //    5      _________       Fifth      
+0000000160   //    6      _________       Sixth      
+0000000128   //    7      _________       Seventh    
+0000000235   //    8      _________       Eighth     
+0000000117   //    9      _________       Ninth      
+0000000001   //    10     _________       Tenth      Calculated as N-1